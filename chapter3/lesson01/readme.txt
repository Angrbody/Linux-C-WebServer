线程：LWP（Light Weight Process）- thread
    - 允许应用程序并发执行多个任务的一种机制
    - 一个进程可以包含多个线程
    - 同一个程序中的所有线程均会独立执行相同程序，且共享同一份全局内存区域
    - 进程是CPU分配资源的最小单位，线程是操作系统调度执行的最小单位

线程与进程的区别
    - 进程间的信息难以共享，进程间通信比较麻烦
    - 调用fork()来创建进程的代价相对较高（大量的复制）、时间开销大
    - 线程之间能够方便、快速地共享信息。只需将数据复制到共享（全局或堆）中的变量中即可
    - 线程间共享虚拟地址空间，而无需像进程间进行复制

线程之间共享和非共享资源：
    共享资源
        进程ID和父进程ID
        进程组ID和会话ID
        用户ID和用户组ID
        文件描述符表
        信号处置
        文件系统的相关信息：文件权限掩码umask、当前工作目录
        虚拟地址空间（栈、.text除外）
    
    非共享资源
        线程ID
        信号掩码
        线程特有数据
        error变量
        实时调度策略和优先级
        栈、本地变量和函数的调用链接信息
