管道的读写特点：
使用管道时，需要注意以下几种特殊的情况（假设都是阻塞I/O操作）

1. 所有的指向管道写端的文件描述符都关闭了（管道的写端引用计数为0），有进程从管道的读端读取数据，管道中剩余的数据被
读取以后，再次read会返回0，就像读到文件末尾一样。

2. 如果有指向管道写端的文件描述符没有关闭（管道写端的引用计数大于0），而持有管道写端的进程也没有往管道中写数据，有
进程从管道中读取数据，当管道中剩余的数据被读取以后，再次read会阻塞，直到写端有数据写入。

3. 如果所有指向管道读端的文件描述符都关闭了（管道读端引用计数等于0），此时有进程向管道中写数据，那么改进程会收到
一个信号SIGPIPE，通常会导致进程的异常终止。

4. 如果有指向管道读端的文件描述符没有关闭（管道读端的引用计数大于0），而持有管道读端的进程也没有往管道中读数据，此时
有进程向管道写数据，在管道被写满的时候会产生阻塞，直到有数据被读走。

总结：
    读管道：
        管道中有数据，read返回实际读到的字节数。
        管道中无数据：
            写端全部关闭，read返回0，相当于读到文件的末尾
            写端没有全部关闭，read会阻塞等待
    写管道：
        管道读端全部关闭，进程异常终止（收到SIGPIPE信号）
        管道读端没有全部关闭：
            管道已满：write阻塞
            管道未满：write将数据写入，并返回实际的字节数。
